image: golang:1.13-alpine

variables:
  GORELEASER_IMAGE: goreleaser/goreleaser:latest
  NANCY_VERSION: v0.0.39
  GIT_DEPTH: "0"

stages:
  - test
  - lint
  - check
  - snapshot

before_script:
  - apk --update add curl docker-cli git || echo ":D"

go test:
  stage: test
  script:
    - go test -v
      -cover -covermode atomic
      -coverprofile coverage.out
      -json > test-report.json
    - go tool cover -func coverage.out
  artifacts:
    paths:
      - coverage.out
      - test-report.json

eclint:
  stage: lint
  script:
    - go build -o eclint cmd/eclint/main.go
    - ./eclint -exclude "testdata/**/*"

golangci-lint:
  stage: lint
  image: golangci/golangci-lint
  script:
    - golangci-lint run -v
      --issues-exit-code 0
      --out-format checkstyle > report.xml
  artifacts:
    paths:
      - report.xml

nancy:
  stage: check
  script:
    - curl -sL -o nancy
      "https://github.com/sonatype-nexus-community/nancy/releases/download/${NANCY_VERSION}/nancy-linux.amd64-${NANCY_VERSION}"
    - chmod +x nancy
    - ./nancy go.sum

sonarcloud check:
  stage: check
  image:
    name: greut/sonar-scanner-cli:latest
    entrypoint: [""]
  needs:
    - go test
    - golangci-lint
  script:
    - sonar-scanner
      -Dsonar.projectVersion=$(git describe --abbrev=0 --tags)
      -Dsonar.qualitygate.wait=true

go-mod-outdated:
  stage: check
  script:
    - go get -u github.com/psampaz/go-mod-outdated
    - go list -u -m -json all | $GOPATH/bin/go-mod-outdated -update -direct -ci

goreleaser snapshot:
  stage: snapshot
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
    - bin/goreleaser
      --snapshot --skip-sign
